// Mocks generated by Mockito 5.4.4 from annotations
// in control/test/src/handlers/sequential_controller_handler_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:control/control.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IControllerObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockIControllerObserver extends _i1.Mock
    implements _i2.IControllerObserver {
  @override
  void onCreate(_i2.Controller? controller) => super.noSuchMethod(
        Invocation.method(
          #onCreate,
          [controller],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose(_i2.Controller? controller) => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [controller],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onStateChanged<S extends Object>(
    _i2.StateController<S>? controller,
    S? prevState,
    S? nextState,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onStateChanged,
          [
            controller,
            prevState,
            nextState,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    _i2.Controller? controller,
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            controller,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
